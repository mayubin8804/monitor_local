#!/usr/bin/python
# -*- coding: UTF-8 -*-

import subprocess
import logging

class MyCron(object):
    '''This class is used to modify the cron list.'''
    
    def __init__(self, jobName):
        self.__jobName = jobName
        self.__logger = logging.getLogger('monitor_local.MyCron')
    
    def addCronByMinInterval(self, interval):
        cronJob = '*/%s * * * * %s' % (interval, self.__jobName)
        self.__addCronJob(cronJob)
    
    def addCronByHour(self, hour):
        cronJob = '* %s * * * %s' % (hour, self.__jobName)
        self.__addCronJob(cronJob)
    
    def removeCronJob(self):
        oldCronTaskList = self.__getCurTaskList()
        newCronTaskList = []
        removeFlag = False
        for cronTask in oldCronTaskList:
            if cronTask.find(self.__jobName) == -1:
                newCronTaskList.append(cronTask)
            else:
                removeFlag = True
                cronJob = cronTask
        if removeFlag:
            self.__logger.info("Remove job from crontab: %s" % cronJob)
            self.__write2crontab(newCronTaskList)
    
    def hasCronJob(self):
        cronTaskList = self.__getCurTaskList()
        for cronTask in cronTaskList:
            if cronTask.find(self.__jobName) != -1:
                return True
        return False
    
    def __addCronJob(self, cronJob):
        cronTaskList = self.__getCurTaskList()
        for cronTask in cronTaskList:
            if cronTask.find(cronJob) != -1:
                return
        self.__logger.info("Add job to crontab: %s" % cronJob)
        cronTaskList.append(cronJob)
        self.__write2crontab(cronTaskList)
    
    def __getCurTaskList(self):
        return subprocess.check_output(["crontab", "-l"]).rstrip().split('\n')
    
    def __write2crontab(self, taskList):
        p = subprocess.Popen(["crontab"], stdin=subprocess.PIPE)
        p.communicate(input='\n'.join(taskList) + '\n')

if __name__ == '__main__':
    myCronObj = MyCron('test_myCron_1')
    #myCronObj.addCronByMinInterval('10')
    #myCronObj.removeCronJob()